"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# 建立專案路徑
BASE_DIR = Path(__file__).resolve().parent.parent

# 快速啟動開發設置 - 不適合生產環境
# 請參閱 https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# 安全警告：在生產環境中請保密使用的密鑰！
SECRET_KEY = 'django-insecure-pt*(xw8(1%m336#ru6iwdjxsh!+w*)&m&e$d^e)lvkj3t(8gx@'

# 安全警告：在生產環境中不要開啟 debug 模式！
DEBUG = True

ALLOWED_HOSTS = []


# 應用程式定義
INSTALLED_APPS = [
    'django.contrib.admin',  # 管理員後台
    'django.contrib.auth',  # 認證系統
    'django.contrib.contenttypes',  # 內容類型框架
    'django.contrib.sessions',  # 會話框架
    'django.contrib.messages',  # 訊息框架
    'django.contrib.staticfiles',  # 靜態文件管理
    'markdownx',  # Markdownx 支援
    'rest_framework',  # Django REST framework
    'blog',  # 自定義的 blog 應用程式
]

# 中介軟體定義
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # 安全中介軟體
    'django.contrib.sessions.middleware.SessionMiddleware',  # 會話中介軟體
    'django.middleware.common.CommonMiddleware',  # 通用中介軟體
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF 保護中介軟體
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 認證中介軟體
    'django.contrib.messages.middleware.MessageMiddleware',  # 訊息中介軟體
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # 點擊劫持保護中介軟體
]

ROOT_URLCONF = 'core.urls'

# 模板設置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# 資料庫設置
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# 密碼驗證
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 國際化設置
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-hant'  # 設置為繁體中文

TIME_ZONE = 'Asia/Taipei'  # 設置為台北時區

USE_I18N = True

USE_TZ = True


# 靜態文件設置 (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # 靜態文件目錄
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # 靜態文件收集目錄

# 媒體文件設置 (用戶上傳的文件)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 媒體文件存放目錄

# 預設主鍵字段類型
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 登入和登出後的重定向設置
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# 緩存設置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# 郵件設置（使用 Gmail 作為 SMTP 伺服器）
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = "Zoe Note"
EMAIL_HOST_USER = os.getenv("ZOE_EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("ZOE_EMAIL_HOST_PASSWORD")

# 日誌設置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}